---
apiVersion: workload.crossplane.io/v1alpha1
kind: KubernetesApplication
metadata:
  name: {{ .Release.Name }}-app
  labels:
    app: {{ .Release.Name }}
  annotations:
    templatestacks.crossplane.io/deletion-priority: "1"
spec:
  resourceSelector:
    matchLabels:
      app: {{ .Release.Name }}
  targetSelector:
  {{ if ne (.Values.provisionPolicy | default "ProvisionNewCluster") "UseExistingTarget" }}
    matchLabels:
      app: {{ .Release.Name }}
  {{ else }}
    matchLabels: {}
  {{ end }}
  resourceTemplates:
    - metadata:
        name: {{ .Release.Name }}-namespace
        labels:
          app: {{ .Release.Name }}
      spec:
        template:
          apiVersion: v1
          kind: Namespace
          metadata:
            name: {{ .Release.Name }}
            labels:
              app: wordpress
    - metadata:
        name: {{ .Release.Name }}-deployment
        labels:
          app: {{ .Release.Name }}
      spec:
        secrets:
          # This must match the writeConnectionSecretToRef field
          # on the database claim; it is the name of the secret to
          # pull from the crossplane cluster, from this Application's namespace.
          - name: sql
        template:
          apiVersion: apps/v1
          kind: Deployment
          metadata:
            namespace: {{ .Release.Name }}
            name: wordpress
            labels:
              app: wordpress
          spec:
            selector:
              matchLabels:
                app: wordpress
            template:
              metadata:
                labels:
                  app: wordpress
              spec:
                containers:
                  - name: wordpress
                    image: {{ .Values.image | default "wordpress:4.6.1-apache" | quote }}
                    env:
                      - name: WORDPRESS_DB_HOST
                        valueFrom:
                          secretKeyRef:
                            # This is the name of the secret to use to consume the secret
                            # within the managed cluster. The reason it's different from the
                            # name of the secret above is because within the managed cluster,
                            # a crossplane-managed secret is written as '{metadata.name}-{secretname}'.
                            # The metadata name is specified above for this resource, and so is
                            # the secret name.
                            name: {{ .Release.Name }}-deployment-sql
                            key: endpoint
                      - name: WORDPRESS_DB_USER
                        valueFrom:
                          secretKeyRef:
                            name: {{ .Release.Name }}-deployment-sql
                            key: username
                      - name: WORDPRESS_DB_PASSWORD
                        valueFrom:
                          secretKeyRef:
                            name: {{ .Release.Name }}-deployment-sql
                            key: password
                    ports:
                      - containerPort: 80
                        name: wordpress
    - metadata:
        name: {{ .Release.Name }}-service
        labels:
          app: {{ .Release.Name }}
      spec:
        template:
          apiVersion: v1
          kind: Service
          metadata:
            namespace: {{ .Release.Name }}
            name: wordpress
            labels:
              app: wordpress
          spec:
            ports:
              - port: 80
            selector:
              app: wordpress
            type: LoadBalancer
